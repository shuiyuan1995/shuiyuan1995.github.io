{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"js游戏","slug":"js游戏","date":"2019-03-04T07:57:43.000Z","updated":"2019-03-04T07:57:43.471Z","comments":false,"path":"2019/03/04/js游戏/","link":"","permalink":"http://yoursite.com/2019/03/04/js游戏/","excerpt":"","text":"","categories":[{"name":"分类1","slug":"分类1","permalink":"http://yoursite.com/categories/分类1/"},{"name":"分类2","slug":"分类1/分类2","permalink":"http://yoursite.com/categories/分类1/分类2/"}],"tags":[{"name":"标签1","slug":"标签1","permalink":"http://yoursite.com/tags/标签1/"},{"name":"标签2","slug":"标签2","permalink":"http://yoursite.com/tags/标签2/"}],"keywords":[{"name":"分类1","slug":"分类1","permalink":"http://yoursite.com/categories/分类1/"},{"name":"分类2","slug":"分类1/分类2","permalink":"http://yoursite.com/categories/分类1/分类2/"}]},{"title":"学习es6 Promise笔记","slug":"学习es6-Promise理解","date":"2019-03-04T05:56:41.000Z","updated":"2019-03-04T07:01:46.085Z","comments":false,"path":"2019/03/04/学习es6-Promise理解/","link":"","permalink":"http://yoursite.com/2019/03/04/学习es6-Promise理解/","excerpt":"","text":"Promise 是异步编程的一种解决方案，比传统的解决方案——回调函数和事件——更合理和更强大。它由社区最早提出和实现，ES6 将其写进了语言标准，统一了用法，原生提供了Promise对象。 promise简介1.用在异步计算2.可以将异步操作队列化，按照期望的顺序执行，返回符合预期的结果。3.可以在队列之间传递与操作promise，帮助我们处理队列。 promise产生原因 javascript 包含大量异步操作。 有了node.js之后对异步的依赖进一步加剧了。 无阻塞高并发，是node.js的招牌。 异步操作是其保障。 大量操作依赖回调函数。 异步回调问题： 嵌套层次很深，难以维护。 无法正常使用return 和 throw。 无法正常检索堆栈信息。 多个回调之间难以建立联系。","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}],"tags":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/tags/前端/"},{"name":"js","slug":"js","permalink":"http://yoursite.com/tags/js/"},{"name":"学习","slug":"学习","permalink":"http://yoursite.com/tags/学习/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-03-04T02:16:32.129Z","updated":"2019-03-04T02:16:32.129Z","comments":true,"path":"2019/03/04/hello-world/","link":"","permalink":"http://yoursite.com/2019/03/04/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]}]}